{"version":3,"sources":["components/FavouriteJokes/FavouriteJokes.module.scss","App.module.scss","container/Layout.module.scss","components/JokeCard/JokeCard.module.scss","context/JokeContext/JokeContext.js","components/JokeGenerator/JokeGenerator.jsx","lib/lib.js","components/JokeCard/JokeCard.jsx","components/JokeList/JokeList.jsx","components/FavouriteJokes/FavouriteJokes.jsx","components/MenuToggle/assets/icons/menu.svg","components/MenuToggle/assets/icons/cancel.svg","components/MenuToggle/MenuToggle.jsx","container/Layout.jsx","context/types.js","context/JokeContext/JokeReducer.js","context/JokeContext/JokeState.js","App.js","index.js","components/JokeGenerator/JokeGenerator.module.scss","components/MenuToggle/MenuToggle.module.scss"],"names":["module","exports","JokeContext","createContext","JokeGenerator","console","log","useContext","jokeCategories","categoriesList","setCategory","favouriteJokes","inputValue","getJokeCategories","getJoke","setInputValue","getRandomJoke","setJokeType","categoryErrorMessage","jokeList","jokeType","searchErrorMessage","getFavJokesFromLS","useState","choosedOption","setValue","useEffect","onChangeValue","event","target","value","chooseCategory","categoryName","getAttribute","includes","indexOfCategory","indexOf","splice","push","categoriesDiv","className","classes","length","Error","map","joke","cls","Category","OutlineCategory","join","onClick","Math","random","searchDiv","type","placeholder","onFocus","e","onKeyDown","key","onChange","Title","Radio","id","name","defaultChecked","htmlFor","SearchOption","JokeButton","diffBetweenDays","date","hours","currentDate","Date","now","startDate","split","getTime","diffTime","abs","floor","getRandomInt","min","max","ceil","JokeCard","props","setFavJoke","likeBtnCls","LikeButton","jokeCardCls","isLiked","Liked","JokeCardType","FavJoke","JokeList","MessageIcon","Container","Header","Id","IdNumber","jokeId","likedJoke","find","some","favJoke","index","findIndex","Content","Footer","Time","updated_at","categories","CategoryType","Fragment","FavouriteJokes","favContent","Exception","MenuToggle","isOpen","setChecked","handleResize","window","innerWidth","addEventListener","menuToggleCls","DrawCls","imgUrl","Opened","closeIcon","Blackout","Closed","BlackoutOff","menuIcon","ToggleButton","alt","src","MenuIcon","JokeContent","Layout","JokeSection","GET_JOKE_CATEGORIES","SET_TEST_VALUE","SET_JOKE","SET_JOKE_TYPE","INPUT_VALUE","SET_CATEGORY","SET_CATEGORY_ERROR_MESSAGE","SET_SEARCH_ERROR_MESSAGE","SET_FAV_JOKE","handlers","state","payload","test_value","JokeReducer","action","DEFAULT","JokeState","children","initialState","CategoryOption","useReducer","rootReducer","dispatch","a","axios","get","response","data","randomNumber","category","result","Provider","localStorage","setItem","JSON","stringify","emptyArray","favJokes","getItem","parse","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a28a4270.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavouriteJokes\":\"FavouriteJokes_FavouriteJokes__2tvWh\",\"Title\":\"FavouriteJokes_Title__1kP7r\",\"JokeCardFav\":\"FavouriteJokes_JokeCardFav__3s79F\",\"Header\":\"FavouriteJokes_Header__3THIS\",\"Exception\":\"FavouriteJokes_Exception__26UoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1vpZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3T_Nh\",\"JokeSection\":\"Layout_JokeSection__2535r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JokeCard\":\"JokeCard_JokeCard__3_qHa\",\"MessageIcon\":\"JokeCard_MessageIcon__jcpR8\",\"Container\":\"JokeCard_Container__3-nro\",\"Header\":\"JokeCard_Header__3_XTI\",\"Id\":\"JokeCard_Id__1lYoH\",\"IdNumber\":\"JokeCard_IdNumber__30okw\",\"LikeButton\":\"JokeCard_LikeButton__3e_Tz\",\"Liked\":\"JokeCard_Liked__314rK\",\"Content\":\"JokeCard_Content__1S8SR\",\"Footer\":\"JokeCard_Footer__25P2Q\",\"Time\":\"JokeCard_Time__PyTj3\",\"CategoryType\":\"JokeCard_CategoryType__2924J\",\"JokeList\":\"JokeCard_JokeList__79usD\",\"FavJoke\":\"JokeCard_FavJoke__jFZP2\"};","import {createContext} from 'react'\r\n\r\nexport const JokeContext = createContext()\r\n\r\nexport default JokeContext;","import React, {useContext, useState, useEffect, Fragment} from 'react';\r\nimport {JokeContext} from '../../context/JokeContext/JokeContext';\r\n\r\nimport classes from './JokeGenerator.module.scss'\r\n\r\nfunction JokeGenerator() {\r\n  console.log('jokeCOntext', JokeContext)\r\n  const {jokeCategories,\r\n     categoriesList,\r\n     favouriteJokes, \r\n     inputValue, \r\n     setCategory, \r\n     getJokeCategories, \r\n     getJoke, \r\n     getRandomJoke, \r\n     setInputValue, \r\n     setJokeType, \r\n     jokeList, \r\n     jokeType,\r\n     categoryErrorMessage,\r\n     searchErrorMessage, getFavJokesFromLS\r\n    } = useContext(JokeContext);\r\n\r\n  const [choosedOption, setValue] = useState(false);\r\n\r\n  const CategoryOption = 'CategoryOption'\r\n  const SearchOption = 'SearchOption'\r\n\r\n  useEffect( ()=> {\r\n    getJokeCategories()\r\n  }, [])\r\n\r\n\r\n  const onChangeValue = (event) => {\r\n\r\n    if(event.target.value === CategoryOption) {\r\n      setJokeType(event.target.value)\r\n    }\r\n\r\n    else if (event.target.value === SearchOption) {\r\n      setJokeType(event.target.value)\r\n    }\r\n\r\n    else {\r\n      setJokeType(event.target.value)\r\n    }\r\n\r\n    setValue(event.target.value);\r\n  }\r\n  const chooseCategory = (event) => {\r\n    const categoryName = event.target.getAttribute('data-value');\r\n\r\n    if(categoriesList.includes(categoryName)) {\r\n      const indexOfCategory = categoriesList.indexOf(categoryName)\r\n\r\n      categoriesList.splice(indexOfCategory, 1);\r\n      setCategory(categoriesList)\r\n    }\r\n    else {\r\n      categoriesList.push(event.target.getAttribute('data-value'))\r\n      setCategory(categoriesList);\r\n    }\r\n  }\r\n\r\n const handleKeyDown = (event) => {\r\n  if (event.key === 'Enter') {\r\n    getJoke(event);\r\n  }\r\n }\r\n\r\n  const categoriesDiv = \r\n  <div className={classes.categoriesList}>\r\n    {categoryErrorMessage.length>0 ? <p className={classes.Error}>{categoryErrorMessage}</p> : null}\r\n    {jokeCategories.map( (joke)=> {\r\n      const cls = [classes.Category];\r\n\r\n      if(categoriesList.includes(joke)) {\r\n        cls.push(classes.OutlineCategory)\r\n      }\r\n\r\n      return (\r\n        <p className={cls.join(' ')} data-value={joke} onClick={chooseCategory} key={joke+Math.random()}>{joke}</p>\r\n      )\r\n    })}\r\n  </div>\r\n    \r\n  const searchDiv =\r\n   <Fragment>\r\n    {searchErrorMessage.length>0 ?\r\n    <p className={classes.Error}>{searchErrorMessage}</p> : null}\r\n\r\n    <input type=\"text\" placeholder=\"Free text search...\" onFocus={(e) => e.target.placeholder = \"\"} onKeyDown={handleKeyDown} onChange={(event)=>setInputValue(event.target.value)}/>\r\n  </Fragment>\r\n    \r\n\r\n  return (\r\n   <div className={classes.JokeGenerator}>\r\n    <section className={classes.Title}>\r\n     <h1>Hey!</h1>\r\n     <h2>Let's try to find joke for you</h2>\r\n    </section>\r\n    <section className={classes.Radio}>\r\n      <div>\r\n        <input \r\n          type=\"radio\" \r\n          id=\"RandomOption\" \r\n          name=\"radio\" \r\n          value=\"RandomOption\"\r\n          onChange={(event)=>onChangeValue(event, false)}\r\n          defaultChecked/>\r\n        <label htmlFor=\"RandomOption\">Random</label>\r\n      </div>\r\n\r\n      <div>\r\n        <input \r\n          type=\"radio\" \r\n          id=\"CategoryOption\" \r\n          name=\"radio\"\r\n          value=\"CategoryOption\"\r\n          onChange={(event)=>onChangeValue(event,true)}\r\n          />\r\n        <label htmlFor=\"CategoryOption\">From Categories</label>\r\n        <br/>\r\n        { choosedOption==='CategoryOption' ?  categoriesDiv : null}\r\n      </div>\r\n\r\n      <div className={classes.SearchOption}>\r\n        <input \r\n          type=\"radio\" \r\n          id=\"SearchOption\" \r\n          name=\"radio\" \r\n          value=\"SearchOption\"\r\n          onChange={(event)=>onChangeValue(event, true)}\r\n          />\r\n        <label htmlFor=\"SearchOption\">Search</label>\r\n        <br/>\r\n        { choosedOption==='SearchOption' ? searchDiv  : null}\r\n\r\n      </div>\r\n     </section>\r\n\r\n    <button className={classes.JokeButton} onClick={(event)=>getJoke(event)}>Get a joke</button>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default JokeGenerator;","export function diffBetweenDays(date) {\r\n  let hours;\r\n\r\n  if(date) {\r\n    const currentDate = Date.now();\r\n    const startDate = new Date(date.split(' ')[0]).getTime();\r\n    const diffTime = Math.abs(currentDate - startDate);\r\n    hours = Math.floor(diffTime/1000/60/60);\r\n  }\r\n\r\n  return hours;\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport {JokeContext} from '../../context/JokeContext/JokeContext';\r\nimport {diffBetweenDays} from '../../lib/lib.js'\r\nimport classes from './JokeCard.module.scss';\r\nimport \"animate.css\"\r\n\r\nfunction JokeCard(props) {\r\n  const {favouriteJokes, jokeList, setFavJoke} = useContext(JokeContext);\r\n  const likeBtnCls = [classes.LikeButton];\r\n  const jokeCardCls = [classes.JokeCard, 'animate__animated animate__zoomIn']\r\n\r\n  if (props.joke.isLiked) {\r\n    likeBtnCls.push(classes.Liked)\r\n  }\r\n\r\n  if(props.JokeCardType==='favJoke') {\r\n    jokeCardCls.push(classes.FavJoke)\r\n  }\r\n\r\n  else if (props.JokeCardType === 'jokeList') {\r\n    jokeCardCls.push(classes.JokeList)\r\n  }\r\n\r\n  const LikeJoke = (e) => { \r\n    let jokeId = e.target.getAttribute('data-id');\r\n\r\n    let likedJoke = jokeList.find((joke)=> {\r\n      if(joke.id === jokeId) {\r\n        joke.isLiked = joke.isLiked == false ? true : false;\r\n\r\n        return joke;\r\n      }\r\n    });\r\n\r\n    if ( !(favouriteJokes.some(favJoke => favJoke.id === jokeId))) {\r\n      favouriteJokes.push(likedJoke);\r\n    }\r\n\r\n    else {\r\n      let index = favouriteJokes.findIndex(favJoke => favJoke.id ===jokeId);\r\n      favouriteJokes.splice(index, 1);\r\n    }\r\n    \r\n    setFavJoke(favouriteJokes);\r\n  }\r\n\r\n  return (\r\n    <div className={jokeCardCls.join(' ')}>\r\n      <div className={classes.MessageIcon}></div>\r\n      <div className={classes.Container}>\r\n        <div className={classes.Header}>\r\n          <p>\r\n            <span className={classes.Id}>Id: </span>\r\n            <span className={classes.IdNumber}>{props.joke.id}</span>\r\n          </p>\r\n        <button className={likeBtnCls.join('  ')} onClick={LikeJoke} data-id={props.joke.id}></button>\r\n        </div>\r\n        <p className={classes.Content}> { props.joke ? props.joke.value : <span>error</span> } </p>\r\n        <section className={classes.Footer}>\r\n        <span className={classes.Time}>Last update: {diffBetweenDays(props.joke.updated_at)} hours ago</span>\r\n        {props.joke.categories[0] ? <p className={classes.CategoryType}> {props.joke.categories[0]} </p> : ''}\r\n        </section>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default JokeCard;","import React, {useContext} from 'react'\r\nimport {JokeContext} from '../../context/JokeContext/JokeContext';\r\nimport JokeCard from '../JokeCard/JokeCard'\r\n\r\nfunction JokeList() {\r\n  const {jokeList} = useContext(JokeContext)\r\n  let testArray = [1,2,3];\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {jokeList.map( (joke) => (\r\n          <JokeCard JokeCardType={'jokeList'} joke = {joke} key={Math.random + joke.id}></JokeCard>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default JokeList;","import React, {useContext, useState, useEffect} from 'react';\r\nimport JokeCard from '../JokeCard/JokeCard'\r\nimport {JokeContext} from '../../context/JokeContext/JokeContext';\r\nimport classes from './FavouriteJokes.module.scss';\r\n\r\n\r\nfunction FavouriteJokes() {\r\n  const {favouriteJokes, getFavJokesFromLS} =  useContext(JokeContext);\r\n\r\n  useEffect( ()=> {\r\n    getFavJokesFromLS()\r\n  }, [])\r\n\r\n  let favContent = favouriteJokes.length > 0 ? \r\n    favouriteJokes.map( (favJoke) =>\r\n    <JokeCard JokeCardType={'favJoke'} joke={favJoke} key={Math.random + favJoke.id}></JokeCard>) :\r\n    <span className={classes.Exception}>You havent any fav jokes yet</span>\r\n\r\n  return (\r\n    <div className={classes.FavouriteJokes}>\r\n        <p className={classes.Title}>Favourite</p>\r\n        {favContent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavouriteJokes;","export default __webpack_public_path__ + \"static/media/menu.db4aa6fc.svg\";","export default __webpack_public_path__ + \"static/media/cancel.615761ab.svg\";","import React, {useContext, useState, useEffect, Fragment} from 'react';\r\nimport FavouriteJokes from '../FavouriteJokes/FavouriteJokes';\r\nimport {JokeContext} from '../../context/JokeContext/JokeContext';\r\nimport menuIcon from './assets/icons/menu.svg';\r\nimport closeIcon from './assets/icons/cancel.svg';\r\nimport classes from './MenuToggle.module.scss'\r\n\r\nfunction MenuToggle() {  \r\n  const [isOpen, setChecked] = useState(false);\r\n  const toggleChecked = () => setChecked(value => !value);\r\n  const handleResize = () => {\r\n    if (window.innerWidth > 1024) {\r\n      setChecked(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize)\r\n  })\r\n  \r\n\r\n  const menuToggleCls = [\r\n    classes.MenuToggle\r\n  ]\r\n\r\n  let DrawCls = [];\r\n  let imgUrl = '';\r\n\r\n  const closeToggleMenu = (event) => {\r\n    setChecked(false);\r\n  }\r\n\r\n  if(isOpen) {\r\n    menuToggleCls.push(classes.Opened)\r\n    imgUrl = closeIcon;\r\n    DrawCls.push(classes.Blackout);\r\n  }\r\n\r\n  else {\r\n    menuToggleCls.push(classes.Closed)\r\n    DrawCls.push(classes.BlackoutOff);\r\n    imgUrl = menuIcon;\r\n    DrawCls = [];\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={DrawCls.join('  ')} onClick={(event)=>closeToggleMenu(event)}></div>\r\n      <div className={menuToggleCls.join('  ')}>\r\n      <div className={classes.ToggleButton} onClick={toggleChecked}>\r\n        <img alt='menu icon' src={imgUrl} className={classes.MenuIcon}></img>\r\n        <p>Favourite</p>\r\n      </div>\r\n      <div className={classes.JokeContent}>\r\n        <FavouriteJokes></FavouriteJokes>\r\n      </div>\r\n    </div>\r\n    </Fragment>\r\n  );\r\n} \r\n\r\n\r\nexport default MenuToggle;","import React, {Fragment} from 'react';\r\nimport JokeGenerator from '../components/JokeGenerator/JokeGenerator'\r\nimport JokeList from '../components/JokeList/JokeList'\r\nimport MenuToggle from '../components/MenuToggle/MenuToggle'\r\nimport classes from './Layout.module.scss'\r\n\r\nfunction Layout() {\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.Layout}>\r\n        <div className={classes.JokeSection}>\r\n          <JokeGenerator></JokeGenerator>\r\n          <JokeList></JokeList>\r\n        </div>\r\n        <MenuToggle/>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Layout;","export const GET_JOKE_CATEGORIES = 'GET_JOKE_CATEGORIES'\r\nexport const SET_TEST_VALUE = 'SET_TEST_VALUE'\r\nexport const SET_JOKE = 'SET_JOKE'\r\nexport const SET_JOKE_TYPE = 'SET_JOKE_TYPE'\r\nexport const INPUT_VALUE = 'INPUT_VALUE'\r\nexport const SET_CATEGORY = 'SET_CATEGORY'\r\nexport const SET_CATEGORY_ERROR_MESSAGE = 'SET_CATEGORY_ERROR_MESSAGE'\r\nexport const SET_SEARCH_ERROR_MESSAGE = 'SET_SEARCH_ERROR_MESSAGE'\r\nexport const SET_FAV_JOKE = 'SET_FAV_JOKE'\r\nexport default {\r\n  GET_JOKE_CATEGORIES,\r\n  SET_TEST_VALUE, \r\n  SET_JOKE, \r\n  SET_JOKE_TYPE, \r\n  SET_CATEGORY, \r\n  SET_CATEGORY_ERROR_MESSAGE, \r\n  SET_SEARCH_ERROR_MESSAGE,\r\n  SET_FAV_JOKE\r\n};","import {\r\n  GET_JOKE_CATEGORIES, \r\n  SET_TEST_VALUE, \r\n  SET_JOKE, \r\n  SET_JOKE_TYPE, \r\n  INPUT_VALUE, \r\n  SET_CATEGORY, \r\n  REMOVE_CATEGORY,\r\n  SET_CATEGORY_ERROR_MESSAGE,\r\n  SET_SEARCH_ERROR_MESSAGE,\r\n  SET_FAV_JOKE\r\n} from '../types'\r\n\r\nconst handlers = {\r\n  [GET_JOKE_CATEGORIES]: (state, {payload}) => ({...state, jokeCategories: payload}),\r\n  [SET_TEST_VALUE]: (state, name) => ({...state, test_value: name}),\r\n  [SET_JOKE]: (state, {payload}) => ({...state, jokeList: [payload, ...state.jokeList]}),\r\n  [SET_JOKE_TYPE]: (state, {payload}) => ({...state, jokeType: payload}),\r\n  [INPUT_VALUE]: (state, {payload}) => ({...state, inputValue: payload}),\r\n  [SET_CATEGORY]: (state, {payload}) => ({...state, categoriesList: payload }),\r\n  [SET_CATEGORY_ERROR_MESSAGE]: (state, {payload}) => ({...state, categoryErrorMessage: payload}),\r\n  [SET_SEARCH_ERROR_MESSAGE]: (state, {payload}) => ({...state, searchErrorMessage: payload}),\r\n  [SET_FAV_JOKE]: (state, {payload}) => ({...state, favouriteJokes: payload}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const JokeReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n\r\n  return handler(state, action)\r\n}\r\n\r\nexport default JokeReducer;","import React, {useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport JokeContext from './JokeContext.js'\r\nimport rootReducer from './JokeReducer.js'\r\nimport {getRandomInt} from '../../lib/lib.js'\r\nimport {\r\n  GET_JOKE_CATEGORIES, \r\n  SET_JOKE, \r\n  SET_JOKE_TYPE, \r\n  INPUT_VALUE, \r\n  SET_CATEGORY, \r\n  REMOVE_CATEGORY,\r\n  SET_CATEGORY_ERROR_MESSAGE,\r\n  SET_SEARCH_ERROR_MESSAGE,\r\n  SET_FAV_JOKE\r\n} from '../types'\r\n\r\nexport const JokeState = ({children}) => {\r\n  let initialState = {\r\n    jokeCategories: [],\r\n    favouriteJokes: [],\r\n    jokeType: 'RandomOption',\r\n    categoriesList: [],\r\n    inputValue: '',\r\n    jokeList: [],\r\n    favouriteJokes:[],\r\n    categoryErrorMessage: '',\r\n    searchErrorMessage: ''\r\n  }\r\n\r\n  const CategoryOption = 'CategoryOption'\r\n  const SearchOption = 'SearchOption'\r\n\r\n  const [state, dispatch] = useReducer(rootReducer, initialState)\r\n\r\n  const getJokeCategories = async name => {\r\n    const response = await axios.get(`https://api.chucknorris.io/jokes/categories`)\r\n\r\n    dispatch({\r\n      type: GET_JOKE_CATEGORIES,\r\n      payload: response.data\r\n    })\r\n  }\r\n  \r\n\r\n  const setJokeType = (type) => {\r\n    dispatch({\r\n      type: SET_JOKE_TYPE,\r\n      payload: type\r\n    })\r\n\r\n    if(searchErrorMessage.length>0) {\r\n      dispatch({\r\n        type: SET_SEARCH_ERROR_MESSAGE,\r\n        payload: ''\r\n      })\r\n    }\r\n\r\n    if(categoryErrorMessage.length>0) {\r\n      dispatch({\r\n        type: SET_CATEGORY_ERROR_MESSAGE,\r\n        payload: ''\r\n      })\r\n    }\r\n \r\n  }\r\n\r\n  const getJoke = async (liked=false) => {  \r\n    let response = '';\r\n    let payload = [];\r\n      \r\n    if (state.jokeType==CategoryOption) {\r\n\r\n      if (state.categoriesList.length === 0) {\r\n        dispatch({\r\n          type:SET_CATEGORY_ERROR_MESSAGE,\r\n          payload: 'You have to choose at least one category'\r\n        })\r\n      }\r\n\r\n      else {\r\n        const randomNumber = getRandomInt(0, categoriesList.length);\r\n        let category = state.categoriesList[randomNumber];\r\n        response = await axios.get(`https://api.chucknorris.io/jokes/random?category=${category}`)\r\n\r\n        payload = response.data;\r\n\r\n        dispatch({\r\n          type:SET_CATEGORY_ERROR_MESSAGE,\r\n          payload: ''\r\n        })\r\n        payload.isLiked = false;\r\n\r\n        dispatch({\r\n          type: SET_JOKE,\r\n          payload\r\n        })\r\n      }\r\n    }\r\n\r\n    else if (state.jokeType == SearchOption) {\r\n      if(inputValue) {\r\n        response = await axios.get(`https://api.chucknorris.io/jokes/search?query=${inputValue}`)\r\n\r\n        const randomNumber = getRandomInt(0, response.data.result.length)\r\n        payload = response.data.result[randomNumber];\r\n\r\n        if(randomNumber == 0) {\r\n          payload = []\r\n        }      \r\n\r\n        dispatch({\r\n          type: SET_SEARCH_ERROR_MESSAGE,\r\n          payload: ''\r\n        })\r\n\r\n        if(payload.value) {\r\n          payload.isLiked = false;\r\n\r\n          dispatch({\r\n            type: SET_JOKE,\r\n            payload\r\n          })\r\n        }\r\n\r\n        else {\r\n          dispatch({\r\n            type: SET_SEARCH_ERROR_MESSAGE,\r\n            payload: 'Try another word...'\r\n          })\r\n        }\r\n      }\r\n\r\n      else {\r\n        dispatch({\r\n          type: SET_SEARCH_ERROR_MESSAGE,\r\n          payload: 'You have to write something...'\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      response = await axios.get(`https://api.chucknorris.io/jokes/random`)\r\n      payload = response.data\r\n      payload.isLiked = false;\r\n      dispatch({\r\n        type: SET_JOKE,\r\n        payload\r\n      })\r\n    }\r\n  }\r\n\r\n  const setInputValue = (inputValue) => {\r\n    console.log(inputValue)\r\n    dispatch({\r\n      type: INPUT_VALUE,\r\n      payload: inputValue\r\n    })\r\n  }\r\n\r\n  const setCategory = (categoriesList) => {\r\n    dispatch({\r\n      type: SET_CATEGORY,\r\n      payload: categoriesList\r\n    })\r\n  }\r\n\r\n  const getFavJokesFromLS = () => {\r\n    let emptyArray = JSON.stringify([]);\r\n    let favJokes = localStorage.getItem('favJokes');\r\n\r\n    if(favJokes) {\r\n      dispatch({\r\n        type: SET_FAV_JOKE,\r\n        payload: JSON.parse(favJokes)\r\n      })\r\n    }\r\n\r\n    else {\r\n      localStorage.setItem('favJokes', emptyArray)\r\n    }\r\n  }\r\n\r\n  const setFavJoke = (favouriteJokes) => {\r\n    localStorage.setItem('favJokes', JSON.stringify(favouriteJokes))\r\n\r\n    dispatch({\r\n      type: SET_FAV_JOKE,\r\n      payload: favouriteJokes\r\n    })\r\n  }\r\n\r\n  let {jokeCategories, jokeList, favouriteJokes, jokeType, inputValue, categoriesList, categoryErrorMessage, searchErrorMessage} = state;\r\n\r\n  return (\r\n    <JokeContext.Provider value = {{\r\n     getJokeCategories, getJoke, setJokeType, setInputValue, setCategory,\r\n     setFavJoke, getFavJokesFromLS,\r\n     jokeCategories, jokeList, favouriteJokes, jokeType, inputValue, categoriesList,\r\n     categoryErrorMessage, searchErrorMessage, favouriteJokes\r\n    }}>\r\n      {children}\r\n    </JokeContext.Provider>\r\n  )\r\n}","import Layout from './container/Layout'\nimport MenuToggle from './components/MenuToggle/MenuToggle'\nimport {JokeState} from './context/JokeContext/JokeState'\nimport classes from './App.module.scss'\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <JokeState>\n        <Layout/>\n      </JokeState>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.module.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JokeGenerator\":\"JokeGenerator_JokeGenerator__1bAVP\",\"Title\":\"JokeGenerator_Title__1BOsg\",\"Error\":\"JokeGenerator_Error__2eqzQ\",\"Category\":\"JokeGenerator_Category__1BIGJ\",\"OutlineCategory\":\"JokeGenerator_OutlineCategory__2aju4\",\"Radio\":\"JokeGenerator_Radio__2dZQe\",\"categoriesList\":\"JokeGenerator_categoriesList__68Vgb\",\"JokeButton\":\"JokeGenerator_JokeButton__1YEx-\",\"SearchOption\":\"JokeGenerator_SearchOption__FgRR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3AgcK\",\"ToggleButton\":\"MenuToggle_ToggleButton__2-J3P\",\"Open\":\"MenuToggle_Open__1MfjT\",\"JokeContent\":\"MenuToggle_JokeContent__3657h\",\"Blackout\":\"MenuToggle_Blackout__1P7J7\",\"Closed\":\"MenuToggle_Closed__3JvWk\"};"],"sourceRoot":""}